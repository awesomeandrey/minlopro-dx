@IsTest
private class AxiomSoapTest {
    @IsTest
    static void testGenerateSamlResponse() {
        // Create a mock AxiomSamlRequest
        AxiomSoap.AxiomSamlRequest request = new AxiomSoap.AxiomSamlRequest();
        request.samlVersion = '1.1';
        request.issuer = 'TestIssuer';
        request.recipient = 'TestRecipient';
        request.userId = 'TestUserId';
        request.samlUserIdLocation = 'TestLocation';
        request.attributeName = 'TestAttribute';
        request.attributeUri = 'TestUri';
        request.base64EncodeResponse = true;
        // Instantiate AxiomSoap.samlIdp
        AxiomSoap.samlIdp samlIdp = new AxiomSoap.samlIdp();
        // Mock web-service response;
        Test.setMock(WebServiceMock.class, new AxiomWebServiceMock());
        // Call generateSamlResponse method
        String samlResponse = samlIdp.generateSamlResponse(request);
        // Assert that the response is not null
        Assert.isNotNull(samlResponse);
    }

    public class AxiomWebServiceMock implements WebServiceMock {
        public void doInvoke(
            Object stub,
            Object request,
            Map<String, Object> response,
            String endpoint,
            String soapAction,
            String requestName,
            String responseNS,
            String responseName,
            String responseType
        ) {
            // Create response element from the autogenerated class.
            // Populate response element.
            // Add response element to the response parameter, as follows:
            AxiomSoap.generateSamlResponseResponse_element responsePayload = new AxiomSoap.generateSamlResponseResponse_element();
            responsePayload.generateSamlResponseReturn = Date.today().toString();
            response.put('response_x', responsePayload);
        }
    }
}
