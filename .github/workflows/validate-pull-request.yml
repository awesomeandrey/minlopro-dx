name: Validate Pull Request Changes ðŸš§

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-prettier-checks:
    runs-on: ubuntu-22.04
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
        env:
          SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      - name: 'Run Prettier Checks Against Changes Files'
        run: |
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}; git checkout ${{ github.base_ref }}
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }}; git checkout ${{ github.head_ref }}
          git branch
          echo ${{ github.base_ref }} | bash ./scripts/deploy/validations/run_prettier_check_against_changed_files.sh
  run-jest-tests:
    runs-on: ubuntu-22.04
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
        env:
          SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      - name: 'Run Jest Tests with Coverage'
        run: npm run jest:coverage
  run-shell-checks:
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: ludeeus/action-shellcheck@master
        env:
          SHELLCHECK_OPTS: -e SC1091
        with:
          ignore_paths: src
  validate-deployment-to-org:
    needs: [ run-prettier-checks, run-jest-tests, run-shell-checks ]
    environment: "Minlopro Prod"
    env:
      SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
      SF_ADMIN_EMAIL: ${{ vars.SF_ADMIN_EMAIL }}
      SF_GITHUB_WEBHOOK_SECRET: ${{ secrets.SF_GITHUB_WEBHOOK_SECRET }}
      SF_GOOGLE_API_KEY: ${{ secrets.SF_GOOGLE_API_KEY }}
      SF_GOOGLE_RECAPTCHA_SITE_KEY: ${{ secrets.SF_GOOGLE_RECAPTCHA_SITE_KEY }}
      SF_GOOGLE_RECAPTCHA_SITE_SECRET: ${{ secrets.SF_GOOGLE_RECAPTCHA_SITE_SECRET }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
        env:
          SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      - name: "Auth Salesforce Org ðŸŽ«"
        id: auth-salesforce-org
        uses: ./.github/actions/auth-salesforce-org
        with:
          sfdx-auth-url: ${{ env.SF_AUTH_URL }}
      - name: 'Run PRE-Deploy Scripts'
        run: echo ${{ steps.auth-salesforce-org.outputs.target-org-alias }} | bash ./scripts/deploy/pre/run_pre.sh
      - name: 'Generate Delta Manifests'
        run: |
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}; git checkout ${{ github.base_ref }}
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }}; git checkout ${{ github.head_ref }}
          git branch
          # Generate manifests via SGD plugin
          bash ./scripts/deploy/common/generate_manifest.sh \
            --mode "delta" \
            --target-org "${{ steps.auth-salesforce-org.outputs.target-org-alias }}" \
            --from-ref "${{ github.base_ref }}" \
            --to-ref "${{ github.head_ref }}"
      - name: 'Check-Only Deploy Source to Target Org'
        run: bash ./scripts/deploy/deploy.sh ${{ steps.auth-salesforce-org.outputs.target-org-alias }} "dry-run"
  run-code-analyzer:
    needs: [ validate-deployment-to-org ]
    runs-on: ubuntu-22.04
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
        env:
          SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      - name: "Install Salesforce Code Analyzer Plugin"
        run: sf plugins install code-analyzer@latest
      - name: "Extract Changed Files"
        run: |
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}; git checkout ${{ github.base_ref }}
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }}; git checkout ${{ github.head_ref }}
          git branch
          bash ./scripts/deploy/validations/copy_changed_files.sh "${{ github.base_ref }}"
      - name: 'Run Salesforce Code Analyzer'
        id: run-code-analyzer
        uses: forcedotcom/run-code-analyzer@v2
        with:
          run-arguments: -w 'build/src' -f 'results.csv' -f 'results.html' -f 'results.json' -r all
          results-artifact-name: salesforce-code-analyzer-results
          # github-token: ${{ github.token }}
      - name: 'Check the Outputs to Determine Whether to Fail'
        if: |
          steps.run-code-analyzer.outputs.exit-code > 0 ||
          steps.run-code-analyzer.outputs.num-sev1-violations > 0 ||
          steps.run-code-analyzer.outputs.num-sev2-violations > 0
        run: exit 1
