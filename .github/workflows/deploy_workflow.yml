name: Deploy Source ðŸŽ¯

# Trigger Events
on:
  schedule:
    # Runs "At 07:00 on every day-of-week from Monday through Friday"
    - cron: '0 7 * * 1-5'
  workflow_dispatch:
    branches:
      - develop
  push:
    branches:
      - develop

# Jobs
jobs:
  # Event = 'Push'
  deploy-source-to-org:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/develop' && 'Minlopro DevHub' || 'ANOTHER_ENV' }}
    env:
      SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
      SF_CCF_APP_CLIENT_ID: ${{ secrets.SF_CCF_APP_CLIENT_ID }}
      SF_CCF_APP_CLIENT_SECRET: ${{ secrets.SF_CCF_APP_CLIENT_SECRET }}
      SF_GITHUB_WEBHOOK_SECRET: ${{ vars.SF_GITHUB_WEBHOOK_SECRET }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: 'Install Salesforce CLI & Authorize Target Org'
        run: |
          bash ./scripts/deploy/build.sh
          bash ./scripts/deploy/authorize_org.sh --sfdxUrl $SF_AUTH_URL
      - name: 'Deploy Source to Target Org'
        run: |
          npm run sf:manifest:create
          bash ./scripts/deploy/replace_variables.sh
          npm run src:deploy:full
      - name: 'Custom Post-Deployment Steps'
        run: |
          targetOrgAlias=$(bash ./scripts/util/get_target_org_alias.sh)
          bash ./scripts/util/run_apex_script.sh $targetOrgAlias set_up_org_admin
          bash ./scripts/util/run_apex_script.sh $targetOrgAlias set_up_digex_guest_user
          echo $targetOrgAlias | bash ./scripts/util/delete_all_apex_logs.sh
          echo $targetOrgAlias | bash ./scripts/util/delete_obsolete_flow_versions.sh
  run-apex-tests:
    needs: [ deploy-source-to-org ]
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/develop' && 'Minlopro DevHub' || 'ANOTHER_ENV' }}
    env:
      SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: 'Install Salesforce CLI & Authorize Target Org'
        run: |
          bash ./scripts/deploy/build.sh
          bash ./scripts/deploy/authorize_org.sh --sfdxUrl $SF_AUTH_URL
      - name: 'Run All Apex Tests with Coverage'
        run: npm run sf:apex:tests:coverage
  run-pmd-checks:
    needs: [ deploy-source-to-org ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: 'Install NPM Dependencies'
        run: npm install
      - name: 'Run Apex Static Code Analysis (PMD)'
        run: npm run pmd:html || echo "PMD report has been generated!"
      - name: 'Upload PMD Report as Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: apex-pmd-report
          path: build/apex-pmd-report.html
          retention-days: 5
