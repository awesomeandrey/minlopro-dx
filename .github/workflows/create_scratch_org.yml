name: Create Scratch Org ðŸ”°

# Trigger Events
on:
  workflow_dispatch:
    inputs:
      adminEmail:
        type: string
        description: "Admin Email Address"
        required: true
      purgeOnCreate:
        type: boolean
        description: 'Purge On Create?'
        default: true
    branches:
      - main
      - develop

# Jobs
jobs:
  spin-up-scratch-org:
    runs-on: ubuntu-22.04
    environment: "Minlopro DevHub"
    env:
      # This env variable does not have 'SF_' prefix which excludes it from '.env' file
      DEV_HUB_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
      SF_ADMIN_EMAIL: ${{ github.event.inputs.adminEmail }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: 'Install Salesforce CLI & Authorize DevHub Org'
        run: |
          bash ./scripts/deploy/build.sh
          bash ./scripts/deploy/authorize_org.sh --sfdxUrl "$DEV_HUB_AUTH_URL" --orgAlias "DevHub"
          sf config set target-dev-hub "DevHub"
      - name: 'Spin Up Brand New Scratch Org'
        id: spin_scratch_org
        continue-on-error: true
        run: bash ./scripts/automations/create_scratch_org.sh "DevHub" "ScratchOrg" "${{github.event.inputs.adminEmail}}"
      - name: 'Run Apex Tests With Coverage'
        id: run_apex_tests
        continue-on-error: true
        run: npm run sf:apex:tests:coverage -- --target-org "ScratchOrg"
      - name: 'Upload Scratch Org Credentials as Artifact'
        id: upload_scratch_credentials
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: minlopro-scratch-org-credentials
          path: |
            build/*-SO.json
            build/.env
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 5
      - name: 'Purge Scratch Org If Any Step Failed'
        if: ${{ steps.spin_scratch_org.outcome == 'failure' || steps.run_apex_tests.outcome == 'failure' || steps.upload_scratch_credentials.outcome == 'failure' }}
        run: |
          sf org delete scratch --target-org "ScratchOrg" --no-prompt
          exit 1
      - name: 'Purge Scratch Org'
        if: ${{ github.event.inputs.purgeOnCreate == 'true' }}
        run: sf org delete scratch --target-org "ScratchOrg" --no-prompt
