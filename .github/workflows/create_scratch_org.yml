name: Create Scratch Org ðŸ”°

on:
  workflow_dispatch:
    inputs:
      adminEmail:
        type: string
        description: "Admin Email Address"
        required: true
      purgeOnCreate:
        type: boolean
        description: 'Purge On Create?'
        default: true

jobs:
  spin-up-scratch-org:
    runs-on: ubuntu-22.04
    environment: "Minlopro DevHub"
    env:
      # This env variable does not have 'SF_' prefix which excludes it from '.env' file
      DEV_HUB_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
      SF_ADMIN_EMAIL: ${{ github.event.inputs.adminEmail }}
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
      - name: "Auth DevHub Org ðŸŽ«"
        uses: ./.github/actions/auth-salesforce-org
        with:
          sfdx_auth_url: ${{ env.DEV_HUB_AUTH_URL }}
          target-org-alias: "DevHub"
      - name: 'Mark Default DevHub Org'
        run: sf config set target-dev-hub "DevHub"
      - name: 'Spin Up Brand New Scratch Org'
        id: spin-scratch-org
        continue-on-error: true
        run: bash ./scripts/automations/create_scratch_org.sh "DevHub" "ScratchOrg" "${{github.event.inputs.adminEmail}}"
      - name: "Run Apex Tests ðŸš‡"
        id: run_apex_tests
        continue-on-error: true
        uses: ./.github/actions/run-apex-tests
        with:
          target-org-alias: "ScratchOrg"
      - name: 'Upload Scratch Org Credentials as Artifact'
        id: upload-scratch-credentials
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: minlopro-scratch-org-credentials
          path: |
            build/*-SO.json
            build/.env
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 5
      - name: 'Purge Scratch Org If Any Step Failed'
        if: ${{ steps.spin-scratch-org.outcome == 'failure' || steps.run_apex_tests.outcome == 'failure' || steps.upload-scratch-credentials.outcome == 'failure' }}
        run: sf org delete scratch --target-org "ScratchOrg" --no-prompt; exit 1
      - name: 'Purge Scratch Org'
        if: ${{ github.event.inputs.purgeOnCreate == 'true' }}
        run: sf org delete scratch --target-org "ScratchOrg" --no-prompt
