name: Deploy Source ðŸš›
run-name: "Deploy Source (${{ inputs.mode == 'Dry-Run' && 'Dry-Run' || 'Hard' }}) ðŸš›"

on:
  schedule:
    # Runs at 07:00 UTC every Monday through Friday
    - cron: '0 7 * * 1-5'
  workflow_dispatch:
    inputs:
      mode:
        description: "Deployment Mode"
        required: true
        type: choice
        default: "Hard"
        options:
          - "Hard"
          - "Dry-Run"
  push:
    branches:
      - develop

env:
  SF_DEPLOYMENT_MODE: "${{ inputs.mode == 'Dry-Run' && 'Dry-Run' || 'Hard' }}"

jobs:
  deploy-source-to-org:
    runs-on: ubuntu-22.04
    environment: "Minlopro Prod"
    env:
      SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
      SF_ADMIN_EMAIL: ${{ vars.SF_ADMIN_EMAIL }}
      SF_GITHUB_WEBHOOK_SECRET: ${{ secrets.SF_GITHUB_WEBHOOK_SECRET }}
      SF_GOOGLE_API_KEY: ${{ secrets.SF_GOOGLE_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
      - name: "Auth Salesforce Org ðŸŽ«"
        id: auth-salesforce-org
        uses: ./.github/actions/auth-salesforce-org
        with:
          sfdx_auth_url: ${{ env.SF_AUTH_URL }}
      - name: "Run PRE-Deploy Scripts"
        run: echo ${{ steps.auth-salesforce-org.outputs.target-org-alias }} | bash ./scripts/deploy/pre/run_pre.sh
      - name: 'Deploy Source to Target Org'
        run: npm run sf:manifest:create && bash ./scripts/deploy/deploy.sh ${{ steps.auth-salesforce-org.outputs.target-org-alias }} "${{ env.SF_DEPLOYMENT_MODE }}"
      - name: 'Run POST-Deploy Scripts'
        if: ${{ env.SF_DEPLOYMENT_MODE == 'Hard' }}
        run: echo ${{ steps.auth-salesforce-org.outputs.target-org-alias }} | bash ./scripts/deploy/post/run_post.sh
  run-apex-tests:
    if: ${{ inputs.mode != 'Dry-Run' }}
    needs: [ deploy-source-to-org ]
    runs-on: ubuntu-22.04
    environment: "Minlopro Prod"
    env:
      SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
      - name: "Auth Salesforce Org ðŸŽ«"
        id: auth-salesforce-org
        uses: ./.github/actions/auth-salesforce-org
        with:
          sfdx_auth_url: ${{ env.SF_AUTH_URL }}
      - name: 'Run All Apex Tests with Coverage'
        run: npm run sf:apex:tests:coverage
  run-pmd-checks:
    needs: [ deploy-source-to-org ]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
      - name: 'Run Apex Static Code Analysis (PMD)'
        run: npm run pmd:html || echo "PMD report has been generated!"
      - name: 'Upload PMD Report as Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: minlopro-apex-pmd-report
          path: build/apex-pmd-report.html
          retention-days: 5
  run-post-merge-actions:
    if: ${{ github.event_name == 'push' }}
    needs: [ deploy-source-to-org, run-apex-tests ]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
      - name: 'Generate Flows Docs & Push'
        run: |
          git config user.name "${{github.actor}}"
          bash ./scripts/deploy/post-merge-actions/generate_flow_docs_and_push.sh
      - name: 'Create Tag & Push'
        run: |
          git config user.name "${{github.actor}}"
          bash ./scripts/deploy/post-merge-actions/create_tag_and_push.sh
