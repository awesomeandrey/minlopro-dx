name: Deploy Source ðŸš›
run-name: "Deploy Source (${{ github.event_name == 'workflow_dispatch' && inputs.mode || 'Hard' }}) ðŸš›"

on:
  schedule:
    # Runs at 07:00 UTC every Monday through Friday
    - cron: '0 7 * * 1-5'
  workflow_dispatch:
    inputs:
      environment:
        description: "Target Environment"
        required: true
        type: environment
        default: "Minlopro Prod"
      mode:
        description: "Deployment Mode"
        required: true
        type: choice
        default: "Hard"
        options:
          - "Dry-Run"
          - "Hard"
      test-level:
        description: "Test Level"
        required: true
        type: choice
        default: "NoTestRun"
        options:
          - "NoTestRun"
          - "RunLocalTests"
          - "RunAllTestsInOrg"
  push:
    branches:
      - develop

env:
  SF_DEPLOYMENT_MODE: ${{ github.event_name == 'workflow_dispatch' && inputs.mode || 'Hard' }}

jobs:
  deploy-source-to-org:
    runs-on: ubuntu-22.04
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'Minlopro Prod' }}
    env:
      SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
      SF_ADMIN_EMAIL: ${{ vars.SF_ADMIN_EMAIL }}
      SF_GITHUB_WEBHOOK_SECRET: ${{ secrets.SF_GITHUB_WEBHOOK_SECRET }}
      SF_GOOGLE_API_KEY: ${{ secrets.SF_GOOGLE_API_KEY }}
      SF_GOOGLE_RECAPTCHA_SITE_KEY: ${{ secrets.SF_GOOGLE_RECAPTCHA_SITE_KEY }}
      SF_GOOGLE_RECAPTCHA_SITE_SECRET: ${{ secrets.SF_GOOGLE_RECAPTCHA_SITE_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
        env:
          SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      - name: "Auth Salesforce Org ðŸŽ«"
        id: auth-salesforce-org
        uses: ./.github/actions/auth-salesforce-org
        with:
          sfdx-auth-url: ${{ env.SF_AUTH_URL }}
      - name: "Run PRE-Deploy Scripts"
        run: echo ${{ steps.auth-salesforce-org.outputs.target-org-alias }} | bash ./scripts/deploy/pre/run_pre.sh
      - name: 'Deploy Source to Target Org'
        run: |
          npm run sf:manifest:create:full
          bash ./scripts/deploy/deploy.sh \
              "${{ steps.auth-salesforce-org.outputs.target-org-alias }}" \
              "${{ env.SF_DEPLOYMENT_MODE }}" \
              "${{ inputs.test-level }}"
      - name: 'Run POST-Deploy Scripts'
        if: ${{ env.SF_DEPLOYMENT_MODE == 'Hard' }}
        run: echo ${{ steps.auth-salesforce-org.outputs.target-org-alias }} | bash ./scripts/deploy/post/run_post.sh
  run-apex-tests:
    if: ${{ inputs.mode != 'Dry-Run' }}
    needs: [ deploy-source-to-org ]
    runs-on: ubuntu-22.04
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || 'Minlopro Prod' }}
    env:
      SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
        env:
          SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      - name: "Auth Salesforce Org ðŸŽ«"
        id: auth-salesforce-org
        uses: ./.github/actions/auth-salesforce-org
        with:
          sfdx-auth-url: ${{ env.SF_AUTH_URL }}
      - name: "Run Apex Tests ðŸš‡"
        uses: ./.github/actions/run-apex-tests
        with:
          target-org-alias: "${{ steps.auth-salesforce-org.outputs.target-org-alias }}"
  run-code-analyzer:
    needs: [ deploy-source-to-org ]
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
        env:
          SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      - name: "Install Salesforce Code Analyzer Plugin"
        run: sf plugins install code-analyzer@latest
      - name: "Convert To Metadata API Format"
        run: |
          sf project convert source \
            --root-dir "src" \
            --output-dir "mdapi/src" \
            --metadata ApexClass \
            --metadata Flow \
            --metadata AuraDefinitionBundle \
            --metadata LightningComponentBundle
      - name: 'Run Salesforce Code Analyzer'
        id: run-code-analyzer
        uses: forcedotcom/run-code-analyzer@v2
        with:
          run-arguments: -w 'mdapi/src' -f 'results.csv' -f 'results.html' -f 'results.json' -r all
          results-artifact-name: salesforce-code-analyzer-results
          # github-token: ${{ github.token }}
  run-post-merge-actions:
    if: ${{ github.event_name == 'push' }}
    needs: [ deploy-source-to-org, run-apex-tests ]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
        env:
          SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      - name: 'Config Git User'
        run: |
          git config user.name "github-actions[bot] ðŸ¤–"
          git config user.email "${{ github.actor_id }}+github-actions[bot]@users.noreply.github.com"
      - name: 'Generate Flows Docs & Push'
        run: bash ./scripts/deploy/post-merge-actions/generate_flow_docs_and_push.sh
      - name: 'Create Tag & Push'
        run: bash ./scripts/deploy/post-merge-actions/create_tag_and_push.sh
