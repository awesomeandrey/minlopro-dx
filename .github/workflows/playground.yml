name: Playground üêö
run-name: "Playground [${{ inputs.environment }}] / '${{ github.actor }}'"

on:
#  pull_request:
#    types: [ opened, synchronize, reopened ]
  workflow_dispatch:
    inputs:
      environment:
        description: "Target Deployment/Environment"
        required: true
        type: environment
        default: "Minlopro DevHub"
      apex-test-class-names:
        description: "Apex Test Class Names"
        type: string
        default: "OpportunityFlowTests:CarSharingRuleTest:TestDataFactoryTest"

permissions:
  contents: read
  id-token: write
  issues: read
  checks: write
  pull-requests: write

env:
  SF_CLI_VERSION: "2.77.6"

jobs:
  playground-run:
    timeout-minutes: 10
    environment: ${{ inputs.environment && inputs.environment ||  'Minlopro DevHub' }}
    env:
      SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
      GHA_WORKFLOW_RUN_LINK: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Build Environment üöú"
        uses: ./.github/actions/build-env
      - name: "Auth Salesforce Org üé´"
        id: auth-salesforce-org
        uses: ./.github/actions/auth-salesforce-org
        with:
          sfdx_auth_url: ${{ env.SF_AUTH_URL }}
      - name: "Run Apex Tests üöá"
        if: ${{ inputs.apex-test-class-names != '' }}
        id: run-apex-tests
        continue-on-error: true
        uses: ./.github/actions/run-apex-tests
        with:
          target-org-alias: ${{ steps.auth-salesforce-org.outputs.target-org-alias }}
          class-names: ${{ inputs.apex-test-class-names }}
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_PLAYGROUND }}
      - name: 'Composite Actions Outputs'
        run: |
          echo "sf --version >>> $(sf --version)"
          echo "Auth Org Alias >>> ${{ steps.auth-salesforce-org.outputs.target-org-alias }}"
          echo "Auth Org Instance URL >>> ${{ steps.auth-salesforce-org.outputs.target-org-instance-url }}"
          echo "Apex Tests Outcome >>> ${{ steps.run-apex-tests.outputs.success }}"
#      - name: 'GHA Playground - Step #1'
#        run: |
#          echo "„ÄΩÔ∏è Target Environment"
#          echo "ENV=${{ inputs.environment }}"
#          echo "„ÄΩÔ∏è Environment Details"
#          printenv | grep "GITHUB" | column -t -s "=" | sort
#          echo "„ÄΩÔ∏è Setting custom env variable"
#          MINLOPRO_STATUS="Haha I'm playing with GHAs! Cool üíØ!"
#          echo "Value: ${MINLOPRO_STATUS}"
#          echo "MINLOPRO_STATUS=${MINLOPRO_STATUS}" >> $GITHUB_ENV
#          echo "„ÄΩÔ∏è Get Salesforce CLI installation path"
#          which sf
#          echo "„ÄΩÔ∏è Get Global NPM Directory"
#          npm config get prefix
#      - name: 'GHA Playground - Step #2'
#        run: |
#          echo "„ÄΩÔ∏è Getting custom env variable"
#          echo "Env variable value: ${MINLOPRO_STATUS}"
#          echo "„ÄΩÔ∏è Listing Salesforce CLI Plugins & Adding Them As Summary"
#          echo "### Salesforce CLI Plugins" >> $GITHUB_STEP_SUMMARY
#          echo '```json' >> $GITHUB_STEP_SUMMARY
#          sf plugins --json | jq '[.[].name]' >> $GITHUB_STEP_SUMMARY
#          echo '```' >> $GITHUB_STEP_SUMMARY
#      - name: 'GHA Playground - Step #3'
#        run: |
#          echo "„ÄΩÔ∏è Getting custom env variable (cross-step)"
#          echo "Env variable value: ${MINLOPRO_STATUS}"
#          echo "PWD as cli tool: $(pwd)"
#          echo "PWD as GHA env variable: ${{ env.PWD }}"
#          echo "PWD as regular env variable: $PWD"
