name: Create Scratch Org ðŸ”°

on:
  workflow_dispatch:
    inputs:
      adminEmail:
        type: string
        description: "Admin Email Address"
        required: true
      purgeOnCreate:
        type: boolean
        description: 'Purge On Create?'
        default: true
  # Duplicate inputs as for 'workflow_dispatch' event
  workflow_call:
    inputs:
      adminEmail:
        type: string
        description: "Admin Email Address"
        required: true
      purgeOnCreate:
        type: boolean
        description: 'Purge On Create?'
        default: true

env:
  DEV_HUB_ORG_ALIAS: "minlopro-dx-dev-hub"
  SCRATCH_ORG_ALIAS: "minlopro-dx-scratch-org"

jobs:
  spin-up-scratch-org:
    runs-on: ubuntu-22.04
    environment: "Minlopro DevHub"
    env:
      # This env variable does not have 'SF_' prefix which excludes it from '.env' file
      DEV_HUB_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
      SF_ADMIN_EMAIL: ${{ inputs.adminEmail }}
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
        env:
          SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      - name: "Auth DevHub Org ðŸŽ«"
        id: auth-dev-hub-org
        uses: ./.github/actions/auth-salesforce-org
        with:
          sfdx-auth-url: ${{ env.DEV_HUB_AUTH_URL }}
          target-org-alias: ${{ env.DEV_HUB_ORG_ALIAS }}
      - name: 'Config Target DevHub Org'
        shell: bash
        run: sf config set target-dev-hub ${{ steps.auth-dev-hub-org.outputs.target-org-alias }}
      - name: 'Spin Up Brand New Scratch Org'
        id: spin-scratch-org
        continue-on-error: true
        run: bash ./scripts/automations/create_scratch_org.sh ${{ steps.auth-dev-hub-org.outputs.target-org-alias }} ${{ env.SCRATCH_ORG_ALIAS }} ${{ inputs.adminEmail }}
      - name: "Collect Scratch Org Info"
        if: ${{ steps.spin-scratch-org.outcome == 'success' }}
        continue-on-error: true
        shell: bash
        run: |
          scratchOrgAdminEmail="${{ inputs.adminEmail }}"
          scratchOrgAlias="${{ env.SCRATCH_ORG_ALIAS }}"
          scratchOrgInfo="$(sf org display --target-org "$scratchOrgAlias" --json --verbose)"
          scratchOrgInstanceUrl="$(echo "$scratchOrgInfo" | jq -r '.result.instanceUrl')"
          scratchOrgSfdxUrl="$(echo "$scratchOrgInfo" | jq -r '.result.sfdxAuthUrl')"
          scratchOrgBase64EncodedSfdxUrl="$(echo "$scratchOrgSfdxUrl" | base64)"
          # Append custom snippet to workflow summary
          cat > $GITHUB_STEP_SUMMARY << EOF
          ### Scratch Org Admin Email ðŸ“§
          
          \`\`\`bash
          $scratchOrgAdminEmail
          \`\`\`
          
          ### Scratch Org Authentication Shortcut ðŸ’¥
          
          **$scratchOrgInstanceUrl** ðŸ”—
          
          To quickly authenticate with your scratch org, use this command in the Bash terminal:
          
          \`\`\`bash
          scratchOrgAlias="$scratchOrgAlias"; \\
            echo "$scratchOrgBase64EncodedSfdxUrl" | base64 -d | \\
            sf org login sfdx-url --alias "\$scratchOrgAlias" --sfdx-url-stdin --set-default && \\
            sf config set target-org "\$scratchOrgAlias" && \\
            sf project reset tracking --target-org "\$scratchOrgAlias" --no-prompt && \\
            sf org list && sf org display --target-org "\$scratchOrgAlias"
          \`\`\`
          EOF
      - name: "Run Apex Tests ðŸš‡"
        id: run-apex-tests
        continue-on-error: true
        uses: ./.github/actions/run-apex-tests
        with:
          target-org-alias: ${{ env.SCRATCH_ORG_ALIAS }}
      - name: 'Upload Scratch Org Credentials as Artifact'
        id: upload-scratch-credentials
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: minlopro-scratch-org-credentials
          path: |
            build/*-SO.json
            build/.env
          if-no-files-found: error
          include-hidden-files: true
          retention-days: 5
      - name: 'Purge Scratch Org If Any Step Failed'
        if: ${{ cancelled() || steps.spin-scratch-org.outcome == 'failure' || steps.run-apex-tests.outcome == 'failure' || steps.upload-scratch-credentials.outcome == 'failure' }}
        run: sf org delete scratch --target-org ${{ env.SCRATCH_ORG_ALIAS }} --no-prompt; exit 1
      - name: 'Purge Scratch Org'
        if: ${{ inputs.purgeOnCreate == 'true' }}
        run: sf org delete scratch --target-org ${{ env.SCRATCH_ORG_ALIAS }} --no-prompt
