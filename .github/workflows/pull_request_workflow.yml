name: Validate Pull Request Changes ðŸš§

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-prettier-checks:
    runs-on: ubuntu-22.04
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
      - name: 'Run Prettier Checks Against Changes Files'
        run: |
          git checkout ${{github.base_ref}}; git pull
          git checkout ${{github.head_ref}}; git pull
          echo ${{github.base_ref}} | bash ./scripts/deploy/validations/run_prettier_check_against_changed_files.sh
  run-jest-tests:
    runs-on: ubuntu-22.04
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
      - name: 'Run Jest Tests with Coverage'
        run: npm run jest:coverage
  run-shell-checks:
    runs-on: ubuntu-22.04
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: ludeeus/action-shellcheck@master
        with:
          ignore_paths: src
  run-flow-scanner:
    runs-on: ubuntu-22.04
    continue-on-error: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
      - name: 'Run Flow Scanner Checks Against Changes Files'
        run: |
          git checkout ${{github.base_ref}}; git pull
          git checkout ${{github.head_ref}}; git pull
          echo ${{github.base_ref}} | bash ./scripts/deploy/validations/run_flow_scanner_against_changed_files.sh
          echo "### Flow Scan Results" >> $GITHUB_STEP_SUMMARY
          cat "build/flow-scanner-results.txt" >> $GITHUB_STEP_SUMMARY
  validate-deployment-to-org:
    needs: [ run-prettier-checks, run-jest-tests, run-shell-checks, run-flow-scanner ]
    environment: "Minlopro Prod"
    env:
      SF_AUTH_URL: ${{ secrets.SF_AUTH_URL }}
      SF_ADMIN_EMAIL: ${{ vars.SF_ADMIN_EMAIL }}
      SF_GITHUB_WEBHOOK_SECRET: ${{ secrets.SF_GITHUB_WEBHOOK_SECRET }}
      SF_GOOGLE_API_KEY: ${{ secrets.SF_GOOGLE_API_KEY }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Build Environment ðŸšœ"
        uses: ./.github/actions/build-env
      - name: "Auth Salesforce Org ðŸŽ«"
        id: auth-salesforce-org
        uses: ./.github/actions/auth-salesforce-org
        with:
          sfdx_auth_url: ${{ env.SF_AUTH_URL }}
      - name: 'Run PRE-Deploy Scripts'
        run: echo ${{ steps.auth-salesforce-org.outputs.target-org-alias }} | bash ./scripts/deploy/pre/run_pre.sh
      - name: 'Generate Delta Manifests'
        run: |
          # From Branch
          git checkout "${{github.base_ref}}"; git pull 
          # To Branch
          git checkout "${{github.head_ref}}"; git pull
          # Generate manifests via SGD plugin
          bash ./scripts/deploy/common/generate_manifest.sh \
            --mode "delta" \
            --target-org "${{ steps.auth-salesforce-org.outputs.target-org-alias }}" \
            --from-ref "${{github.base_ref}}" \
            --to-ref "${{github.head_ref}}"
      - name: 'Check-Only Deploy Source to Target Org'
        run: bash ./scripts/deploy/deploy.sh ${{ steps.auth-salesforce-org.outputs.target-org-alias }} "dry-run"
