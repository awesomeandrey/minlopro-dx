name: Validate Pull Request Changes ðŸ”§

# Trigger Events
on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - develop

# Jobs
jobs:
  # Event = 'Pull Request'
  run-prettier-checks:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: 'Install NPM Dependencies'
        run: npm install
      - name: 'Run Prettier Check (Partial)'
        run: |
          git checkout ${{github.base_ref}}
          git pull
          git checkout ${{github.head_ref}}
          git pull
          echo ${{github.base_ref}} | bash ./scripts/deploy/run_prettier_check_against_changed_files.sh
  run-jest-tests:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: 'Install NPM Dependencies'
        run: npm install
      - name: 'Run Jest Tests with Coverage'
        run: npm run jest:coverage
  validate-deployment-to-org:
    needs: [ run-prettier-checks, run-jest-tests ]
    environment: "Minlopro DevHub"
    env:
      SF_USERNAME: ${{ vars.SF_USERNAME }}
      SF_CLIENT_ID: ${{ vars.SF_CLIENT_ID }}
      SF_CLIENT_SECRET: ${{ vars.SF_CLIENT_SECRET }}
      SF_BASE_URL: ${{ vars.SF_BASE_URL }}
      SF_TOKEN_URL_PATH: ${{ vars.SF_TOKEN_URL_PATH }}
      SF_AUTH_PROVIDER_URL_PATH: ${{ vars.SF_AUTH_PROVIDER_URL_PATH }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: 'Install Salesforce CLI & Authorize Target Org'
        run: |
          bash ./scripts/deploy/build.sh
          echo ${{secrets.DEV_HUB_AUTH_URL}} | bash ./scripts/deploy/authorize_org.sh
      - name: 'Generate Delta Manifests'
        run: |
          git checkout ${{github.base_ref}}
          git pull
          git checkout ${{github.head_ref}}
          git pull
          branchesInfoFile="branches-info.txt"
          touch $branchesInfoFile
          # From
          echo ${{github.base_ref}} >> $branchesInfoFile
          # To
          echo ${{github.head_ref}} >> $branchesInfoFile
          bash ./scripts/deploy/sgd_generate_manifests.sh < $branchesInfoFile
      - name: 'Check-Only Deploy Source to Target Org'
        run: |
          bash ./scripts/deploy/replace_variables.sh
          targetOrgAlias=$(bash ./scripts/util/get_target_org_alias.sh)
          echo $targetOrgAlias | bash ./scripts/deploy/sgd_validate_deployment.sh
